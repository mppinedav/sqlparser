// $ANTLR 2.7.7 (2006-11-01): "src/parser/parser.g" -> "P.java"$

	package parser;

public interface PTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int SELECT_STATEMENT = 4;
	int SEARCH_NOT_CONDITION = 5;
	int SUBQUERY = 6;
	int GROUP_BY = 7;
	int ORDER_BY = 8;
	int ALIAS_EQU = 9;
	int FUNCTION = 10;
	int FUNCTION_EMPTY_PARAM = 11;
	int FUNCTION_STAR_PARAM = 12;
	int FUNCTION_CONVERSION_AS = 13;
	int FUNCTION_STAR_COUNT = 14;
	int AS_PARAMETERS = 15;
	int LOGIC_OP = 16;
	int LOGICAL_NULL = 17;
	int LOGICAL_NOT_NULL = 18;
	int LOGICAL_IN = 19;
	int LOGICAL_NOT_IN = 20;
	int LOGICAL_LIKE = 21;
	int LOGICAL_NOT_LIKE = 22;
	int LOGICAL_EXISTS = 23;
	int LOGICAL_NOT_EXISTS = 24;
	int LOGICAL_BETWEEN = 25;
	int SUBCONTAIN_OP = 26;
	int ALL_FIELDS = 27;
	int PAREN_FIELD = 28;
	int LOGIC_BLOCK = 29;
	int COLUMN = 30;
	int WHERE = 31;
	int SEMI = 32;
	int LITERAL_t_union = 33;
	// "\u8868\u5408\u5e76" = 34
	int COMMA = 35;
	int LITERAL_t_compare = 36;
	// "\u8868\u6bd4\u8f83" = 37
	int LITERAL_where = 38;
	// "\u6761\u4ef6" = 39
	int LITERAL_not = 40;
	int LITERAL_exists = 41;
	int LITERAL_select = 42;
	// "\u67e5\u8be2" = 43
	int LITERAL_distinct = 44;
	// "\u552f\u4e00" = 45
	int LITERAL_from = 46;
	// "\u6765\u81ea" = 47
	int LITERAL_group = 48;
	int LITERAL_by = 49;
	// "\u5206\u7ec4" = 50
	int LITERAL_order = 51;
	// "\u6392\u5e8f" = 52
	// "\u975e" = 53
	int LITERAL_and = 54;
	int LITERAL_or = 55;
	// "\u5e76\u4e14" = 56
	// "\u6216\u8005" = 57
	int LPAREN = 58;
	int RPAREN = 59;
	int LITERAL_as = 60;
	// "\u4f5c\u4e3a" = 61
	// "=" = 62
	// "\u7b49\u4e8e" = 63
	// "\u6240\u6709" = 64
	int STAR = 65;
	// "\u5347\u5e8f" = 66
	// "\u964d\u5e8f" = 67
	int LITERAL_asc = 68;
	int LITERAL_desc = 69;
	int LITERAL_like = 70;
	int LITERAL_is = 71;
	int LITERAL_null = 72;
	// "\u4e3a\u7a7a" = 73
	// "\u975e\u7a7a" = 74
	int LITERAL_between = 75;
	// "\u8303\u56f4" = 76
	int LITERAL_in = 77;
	// "\u5728\u4e8e" = 78
	// "\u4e0d\u5728\u4e8e" = 79
	int PARAM_ID = 80;
	int ID = 81;
	int QUOTED_STRING = 82;
	int POINT = 83;
	int REAL_NUM = 84;
	int NEGATIVE_DIGIT_ELEMENT = 85;
	// "\u6c42\u8bb0\u5f55\u603b\u6570" = 86
	int LITERAL_count = 87;
	int LITERAL_all = 88;
	// "\u5168\u90e8" = 89
	int LITERAL_avg = 90;
	// "\u6c42\u5e73\u5747\u6570" = 91
	int LITERAL_max = 92;
	// "\u6c42\u6700\u5927\u503c" = 93
	int LITERAL_min = 94;
	// "\u6c42\u6700\u5c0f\u503c" = 95
	int LITERAL_stddev = 96;
	// "\u6c42\u65b9\u5dee" = 97
	int LITERAL_sum = 98;
	// "\u6c42\u548c" = 99
	int LITERAL_variance = 100;
	// "\u6c42\u7edf\u8ba1\u65b9\u5dee" = 101
	int LITERAL_getdate = 102;
	// "\u6c42\u5f53\u524d\u65e5\u671f\u65f6\u95f4" = 103
	int LITERAL_rand = 104;
	// "\u6c420\u548c1\u95f4\u7684\u968f\u673a\u6570" = 105
	int LITERAL_pi = 106;
	// "\u6c42\u5706\u5468\u7387" = 107
	int LITERAL_now = 108;
	// "\u53d6\u5f53\u524d\u65e5\u671f\u65f6\u95f4" = 109
	int LITERAL_today = 110;
	// "\u6c42\u5f53\u524d\u65e5\u671f" = 111
	int LITERAL_cast = 112;
	// "\u6570\u636e\u7c7b\u578b\u8f6c\u5316" = 113
	int LITERAL_abs = 114;
	// "\u53d6\u7edd\u5bf9\u503c" = 115
	int LITERAL_acos = 116;
	// "\u6c42\u53cd\u4f59\u5f26\u503c" = 117
	int LITERAL_asin = 118;
	// "\u6c42\u53cd\u6b63\u5f26\u503c" = 119
	int LITERAL_atan = 120;
	// "\u6c42\u53cd\u6b63\u5207\u503c" = 121
	// "atin2" = 122
	// "\u6c42\u4e8c\u4e2a\u6570\u7684\u53cd\u6b63\u5207\u503c" = 123
	int LITERAL_ceiling = 124;
	// "\u6c42\u4e94\u5165\u540e\u7684\u6574\u6570" = 125
	int LITERAL_cos = 126;
	// "\u6c42\u4f59\u5f26\u503c" = 127
	int LITERAL_cot = 128;
	// "\u6c42\u4f59\u5207\u503c" = 129
	int LITERAL_degrees = 130;
	// "\u5c06\u5f27\u5ea6\u8f6c\u4e3a\u5ea6\u6570" = 131
	int LITERAL_exp = 132;
	// "\u6c42\u5e42\u503c" = 133
	int LITERAL_floor = 134;
	// "\u6c42\u56db\u820d\u540e\u7684\u6574\u6570" = 135
	int LITERAL_log = 136;
	// "\u6c42\u81ea\u7136\u5bf9\u6570" = 137
	// "log10" = 138
	// "\u6c4210\u4e3a\u5e95\u7684\u5bf9\u6570" = 139
	int LITERAL_mod = 140;
	// "\u6c42\u4f59" = 141
	int LITERAL_power = 142;
	// "\u6c42\u6570\u5b57\u7684\u6b21\u5e42\u503c" = 143
	int LITERAL_radians = 144;
	// "\u5c06\u5ea6\u6570\u8f6c\u4e3a\u5f27\u5ea6" = 145
	int LITERAL_remainder = 146;
	// "\u53d6\u4f59" = 147
	int LITERAL_round = 148;
	// "\u683c\u5f0f\u5316\u6570\u503c" = 149
	int LITERAL_sign = 150;
	// "\u6c42\u503c\u7684\u7b26\u53f7" = 151
	int LITERAL_sin = 152;
	// "\u6c42\u6b63\u5f26\u503c" = 153
	int LITERAL_sqrt = 154;
	// "\u6c42\u5e73\u65b9\u6839" = 155
	int LITERAL_tan = 156;
	// "\u6c42\u6b63\u5207\u503c" = 157
	// "\u5c06\u6570\u503c\u683c\u5f0f\u5316" = 158
	int LITERAL_truncnum = 159;
	// "\u53d6\u683c\u5f0f\u5316\u6570\u503c" = 160
	int LITERAL_ascii = 161;
	// "\u6c42ASCII\u7801" = 162
	int LITERAL_bit_length = 163;
	// "\u6c42\u5b57\u7b26\u4e32\u7684\u4e8c\u8fdb\u5236\u957f\u5ea6" = 164
	int LITERAL_byte_length = 165;
	// "\u6c42\u5b57\u7b26\u4e32\u7684\u5b57\u8282\u6570" = 166
	int LITERAL_char = 167;
	// "\u6c42\u7b49\u503c\u7684\u5b57\u7b26" = 168
	int LITERAL_char_length = 169;
	// "\u6c42\u5b57\u7b26\u4e32\u7684\u957f\u5ea6" = 170
	int LITERAL_charindex = 171;
	// "\u5b58\u5728\u4e8e" = 172
	int LITERAL_difference = 173;
	// "\u6c42\u4e24\u4e2a\u4e32\u7684\u58f0\u97f3\u5dee\u503c" = 174
	int LITERAL_insertstr = 175;
	// "\u5b57\u7b26\u4e32\u63d2\u5165" = 176
	int LITERAL_lcase = 177;
	// "\u5b57\u7b26\u4e32\u8f6c\u4e3a\u5c0f\u5199" = 178
	int LITERAL_left = 179;
	// "\u5b57\u7b26\u4e32\u5de6\u622a" = 180
	int LITERAL_length = 181;
	// "\u53d6\u5b57\u7b26\u4e32\u7684\u957f\u5ea6" = 182
	int LITERAL_locate = 183;
	// "\u6c42\u4e32\u51fa\u73b0\u4f4d\u7f6e" = 184
	int LITERAL_lower = 185;
	// "\u5c06\u5b57\u7b26\u4e32\u8f6c\u4e3a\u5c0f\u5199" = 186
	int LITERAL_ltrim = 187;
	// "\u53bb\u6389\u5de6\u7a7a\u683c" = 188
	int LITERAL_octet_length = 189;
	// "\u6c42\u5b57\u7b26\u4e32\u7684\u5b58\u50a8\u957f\u5ea6" = 190
	int LITERAL_patindex = 191;
	// "\u6c42\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e" = 192
	int LITERAL_repeat = 193;
	// "\u5c06\u5b57\u7b26\u4e32\u8fde\u63a5" = 194
	int LITERAL_replace = 195;
	// "\u5b57\u7b26\u4e32\u66ff\u6362" = 196
	int LITERAL_replicate = 197;
	// "\u5b57\u7b26\u4e32\u8fde\u63a5" = 198
	int LITERAL_right = 199;
	// "\u5b57\u7b26\u4e32\u53f3\u622a" = 200
	int LITERAL_rtrim = 201;
	// "\u53bb\u6389\u53f3\u7a7a\u683c" = 202
	int LITERAL_similar = 203;
	// "\u6c42\u5b57\u7b26\u4e32\u76f8\u4f3c\u5ea6" = 204
	int LITERAL_sortkey = 205;
	// "\u5b57\u7b26\u4e32\u6392\u5e8f" = 206
	int LITERAL_soundex = 207;
	// "\u6c42\u5b57\u7b26\u4e32\u58f0\u97f3\u503c" = 208
	int LITERAL_space = 209;
	// "\u6c42\u7a7a\u683c" = 210
	int LITERAL_str = 211;
	// "\u6570\u503c\u8f6c\u5b57\u7b26\u4e32" = 212
	int LITERAL_string = 213;
	// "\u5b57\u7b26\u4e32\u5408\u5e76" = 214
	int LITERAL_stuff = 215;
	// "\u5b57\u7b26\u4e32\u5220\u9664\u66ff\u6362" = 216
	int LITERAL_substring = 217;
	// "\u5b57\u7b26\u4e32\u622a\u53d6" = 218
	int LITERAL_trim = 219;
	// "\u53bb\u6389\u7a7a\u683c" = 220
	int LITERAL_ucase = 221;
	// "\u5b57\u7b26\u4e32\u8f6c\u4e3a\u5927\u5199" = 222
	int LITERAL_upper = 223;
	// "\u5c06\u5b57\u7b26\u4e32\u8f6c\u4e3a\u5927\u5199" = 224
	int LITERAL_dateformat = 225;
	// "\u683c\u5f0f\u5316\u65e5\u671f" = 226
	int LITERAL_datename = 227;
	// "\u6c42\u65e5\u671f\u7684\u5206\u91cf\u540d\u79f0" = 228
	int LITERAL_datepart = 229;
	// "\u6c42\u65e5\u671f\u7684\u5206\u91cf\u503c" = 230
	int LITERAL_datetime = 231;
	// "\u8f6c\u4e3a\u65e5\u671f\u65f6\u95f4" = 232
	int LITERAL_date = 233;
	// "\u8f6c\u4e3a\u65e5\u671f" = 234
	int LITERAL_dayname = 235;
	// "\u6c42\u5bf9\u5e94\u661f\u671f\u540d\u79f0" = 236
	int LITERAL_days = 237;
	// "\u6c42\u5929\u6570" = 238
	int LITERAL_day = 239;
	// "\u6c42\u5bf9\u5e94\u5929" = 240
	int LITERAL_dow = 241;
	// "\u6c42\u5bf9\u5e94\u661f\u671f\u503c" = 242
	int LITERAL_hours = 243;
	// "\u6c42\u5c0f\u65f6\u6570" = 244
	int LITERAL_hour = 245;
	// "\u6c42\u5bf9\u5e94\u5c0f\u65f6" = 246
	int LITERAL_minutes = 247;
	// "\u6c42\u5206\u949f\u6570" = 248
	int LITERAL_minute = 249;
	// "\u6c42\u5bf9\u5e94\u5206\u949f" = 250
	int LITERAL_monthname = 251;
	// "\u6c42\u6708\u4efd\u540d\u79f0" = 252
	int LITERAL_months = 253;
	// "\u6c42\u6708\u6570" = 254
	int LITERAL_month = 255;
	// "\u6c42\u5bf9\u5e94\u6708" = 256
	int LITERAL_quarter = 257;
	// "\u6c42\u5bf9\u5e94\u5b63\u5ea6" = 258
	int LITERAL_seconds = 259;
	// "\u6c42\u79d2\u6570" = 260
	int LITERAL_second = 261;
	// "\u6c42\u5bf9\u5e94\u79d2" = 262
	int LITERAL_weeks = 263;
	// "\u6c42\u5468\u6570" = 264
	int LITERAL_years = 265;
	// "\u6c42\u5e74\u6570" = 266
	int LITERAL_year = 267;
	// "\u6c42\u5bf9\u5e94\u5e74" = 268
	int LITERAL_ymd = 269;
	// "\u6c42\u65e5\u671f" = 270
	int LITERAL_dateadd = 271;
	// "\u65e5\u671f\u76f8\u52a0" = 272
	int LITERAL_datediff = 273;
	// "\u65e5\u671f\u76f8\u51cf" = 274
	int LITERAL_hextoint = 275;
	// "\u5341\u516d\u8fdb\u5236\u8f6c\u4e3a\u6574\u6570" = 276
	int LITERAL_inttohex = 277;
	// "\u6574\u6570\u8f6c\u4e3a\u5341\u516d\u8fdb\u5236" = 278
	int LITERAL_isdate = 279;
	// "\u4e3a\u65e5\u671f\u578b" = 280
	int LITERAL_isnumeric = 281;
	// "\u4e3a\u6570\u503c\u578b" = 282
	int LITERAL_convert = 283;
	// "\u5b57\u7b26\u8f6c\u4e3a\u65e5\u671f" = 284
	int LITERAL_suser_id = 285;
	int LITERAL_suser_name = 286;
	int LITERAL_user_id = 287;
	int LITERAL_user_name = 288;
	int LITERAL_argn = 289;
	int LITERAL_rowid = 290;
	int ONE_ARG_OP = 291;
	int TWO_ARG_OP = 292;
	int MINUS = 293;
	// "\u4e0e" = 294
	// "\u6216" = 295
	// "\u5f02\u6216" = 296
	// "\u52a0" = 297
	// "\u51cf" = 298
	// "\u4e58" = 299
	// "\u9664" = 300
	// "\u6c42\u6a21" = 301
	int COMPARE_OP = 302;
	// "\u5927\u4e8e\u7b49\u4e8e" = 303
	// "\u5c0f\u4e8e\u7b49\u4e8e" = 304
	// "\u5927\u4e8e" = 305
	// "\u5c0f\u4e8e" = 306
	// "\u4e0d\u7b49\u4e8e" = 307
	// "\u5305\u542b" = 308
	// "\u4e0d\u5305\u542b" = 309
	// "\u5de6\u8fde\u63a5" = 310
	int LEFT_JOIN = 311;
	// "\u5b58\u5728" = 312
	// "\u4e0d\u5b58\u5728" = 313
	int LITERAL_yy = 314;
	int LITERAL_mm = 315;
	int LITERAL_dd = 316;
	int LITERAL_qq = 317;
	int LITERAL_week = 318;
	int LITERAL_wk = 319;
	int LITERAL_dayofyear = 320;
	int LITERAL_dy = 321;
	int LITERAL_weekday = 322;
	int LITERAL_dw = 323;
	int LITERAL_hh = 324;
	int LITERAL_mi = 325;
	int LITERAL_ss = 326;
	int LITERAL_millisecond = 327;
	int LITERAL_ms = 328;
	int LITERAL_calweekofyear = 329;
	int LITERAL_cwk = 330;
	int LITERAL_calyearofweek = 331;
	int LITERAL_cyr = 332;
	int LITERAL_caldayofweek = 333;
	int LITERAL_cdw = 334;
	int PARAM_LPAREN = 335;
	int PARAM_RPAREN = 336;
	int WS = 337;
	int ESC = 338;
	int ID_START_LETTER = 339;
	int ID_LETTER = 340;
	int NUM = 341;
	int DOT_NUM = 342;
	int NUM_START = 343;
	int NUM_LETTER = 344;
	int ML_COMMENT = 345;
}
