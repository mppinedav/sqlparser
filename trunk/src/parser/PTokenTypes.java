// $ANTLR 2.7.7 (2006-11-01): "src/parser/parser.g" -> "P.java"$

package parser;

public interface PTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int SELECT_STATEMENT = 4;
	int SUBQUERY = 5;
	int GROUP_BY = 6;
	int ORDER_BY = 7;
	int ALIAS_EQU = 8;
	int FUNCTION = 9;
	int LOGIC_OP = 10;
	int CONTAIN_OP = 11;
	int SUBCONTAIN_OP = 12;
	int ALL_FIELDS = 13;
	int LOGIC_BLOCK = 14;
	int COLUMN = 15;
	int WHERE = 16;
	int SEMI = 17;
	int LITERAL_t_union = 18;
	// "\u8868\u5408\u5e76" = 19
	int COMMA = 20;
	int LITERAL_t_compare = 21;
	// "\u8868\u6bd4\u8f83" = 22
	int LITERAL_where = 23;
	// "\u6761\u4ef6" = 24
	int LITERAL_select = 25;
	// "\u67e5\u8be2" = 26
	int LITERAL_distinct = 27;
	// "\u552f\u4e00" = 28
	int LITERAL_from = 29;
	// "\u6765\u81ea" = 30
	int LITERAL_left = 31;
	int LITERAL_join = 32;
	// "\u5de6\u8fde\u63a5" = 33
	int LITERAL_group = 34;
	int LITERAL_by = 35;
	// "\u5206\u7ec4" = 36
	int LITERAL_order = 37;
	// "\u6392\u5e8f" = 38
	int LITERAL_not = 39;
	// "\u975e" = 40
	int LITERAL_and = 41;
	int LITERAL_or = 42;
	// "\u5e76\u4e14" = 43
	// "\u6216\u8005" = 44
	int LPAREN = 45;
	int RPAREN = 46;
	int LITERAL_as = 47;
	// "\u4f5c\u4e3a" = 48
	// "=" = 49
	// "\u7b49\u4e8e" = 50
	// "\u6240\u6709" = 51
	int STAR = 52;
	// "\u5347\u5e8f" = 53
	// "\u964d\u5e8f" = 54
	int LITERAL_asc = 55;
	int LITERAL_desc = 56;
	int LITERAL_is = 57;
	int LITERAL_null = 58;
	// "\u4e3a\u7a7a" = 59
	// "\u975e\u7a7a" = 60
	int LITERAL_between = 61;
	// "\u8303\u56f4" = 62
	// "not in" = 63
	int LITERAL_in = 64;
	// "\u5728\u4e8e" = 65
	// "\u4e0d\u5728\u4e8e" = 66
	int PARAM_ID = 67;
	int ID = 68;
	int QUOTED_STRING = 69;
	int POINT = 70;
	int REAL_NUM = 71;
	int NEGATIVE_DIGIT_ELEMENT = 72;
	int LITERAL_all = 73;
	// "\u5168\u90e8" = 74
	int LITERAL_sum = 75;
	// "\u6c42\u548c" = 76
	int LITERAL_avg = 77;
	// "\u6c42\u5e73\u5747\u6570" = 78
	int LITERAL_max = 79;
	// "\u6c42\u6700\u5927\u503c" = 80
	int LITERAL_min = 81;
	// "\u6c42\u6700\u5c0f\u503c" = 82
	int LITERAL_count = 83;
	// "\u6c42\u8bb0\u5f55\u6570" = 84
	int LITERAL_abs = 85;
	// "\u53d6\u7edd\u5bf9\u503c" = 86
	int LITERAL_acos = 87;
	// "\u6c42\u503c\u7684\u4f59\u5f26\u89d2" = 88
	int LITERAL_asin = 89;
	// "\u6c42\u503c\u7684\u6b63\u5f26\u89d2" = 90
	int LITERAL_atan = 91;
	// "\u6c42\u503c\u7684\u6b63\u5207\u89d2" = 92
	// "atin2" = 93
	// "\u6c42\u503c\u7684\u6b63\u5f26\u548c\u4f59\u5f26\u89d2" = 94
	int LITERAL_ceiling = 95;
	// "\u6c42\u4e94\u5165\u540e\u7684\u6574\u6570" = 96
	int LITERAL_cos = 97;
	// "\u6c42\u89d2\u7684\u4f59\u5f26\u503c" = 98
	int LITERAL_cot = 99;
	// "\u6c42\u89d2\u7684\u4f59\u5207\u503c" = 100
	int LITERAL_degrees = 101;
	// "\u6c42\u5f27\u5ea6\u6570\u7684\u89d2\u5927\u5c0f" = 102
	int LITERAL_exp = 103;
	// "\u6c42\u5e42\u503c" = 104
	int LITERAL_floor = 105;
	// "\u6c42\u56db\u820d\u540e\u7684\u6574\u6570" = 106
	int LITERAL_log = 107;
	// "\u6c42\u81ea\u7136\u5bf9\u6570" = 108
	// "log10" = 109
	// "\u6c4210\u4e3a\u5e95\u7684\u5bf9\u6570" = 110
	int LITERAL_mod = 111;
	// "\u6c42\u6a21" = 112
	int LITERAL_pi = 113;
	// "\u6c42PI" = 114
	int LITERAL_power = 115;
	// "\u6c42\u6570\u5b57\u7684\u6b21\u5e42\u503c" = 116
	int LITERAL_radians = 117;
	// "\u6c42\u5ea6\u6570\u89d2\u7684\u5f27\u5ea6" = 118
	int LITERAL_rand = 119;
	// "\u6c420\u548c1\u95f4\u7684\u968f\u673a\u6570" = 120
	int LITERAL_round = 121;
	// "\u683c\u5f0f\u5316\u6570\u503c" = 122
	int LITERAL_sign = 123;
	// "\u6c42\u503c\u7684\u7b26\u53f7" = 124
	int LITERAL_sin = 125;
	// "\u6c42\u89d2\u7684\u6b63\u5f26\u503c" = 126
	int LITERAL_sqrt = 127;
	// "\u6c42\u5e73\u65b9\u6839" = 128
	int LITERAL_tan = 129;
	// "\u6c42\u89d2\u7684\u6b63\u5207\u503c" = 130
	int LITERAL_ascii = 131;
	// "\u6c42\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684ASCII\u7801" = 132
	int LITERAL_char = 133;
	// "\u6c42\u7b49\u503c\u7684\u5b57\u7b26" = 134
	int LITERAL_char_length = 135;
	// "\u6c42\u5b57\u7b26\u4e32\u7684\u957f\u5ea6" = 136
	int LITERAL_charindex = 137;
	// "\u5b58\u5728\u4e8e" = 138
	int LITERAL_difference = 139;
	// "\u6c42\u4e24\u4e2a\u4e32\u7684\u5dee\u503c" = 140
	int LITERAL_lcase = 141;
	// "\u5b57\u7b26\u4e32\u5de6\u622a" = 142
	int LITERAL_length = 143;
	// "\u6c42\u5b57\u7b26\u4e32\u603b\u957f\u5ea6" = 144
	int LITERAL_lower = 145;
	// "\u5c06\u5b57\u7b26\u4e32\u8f6c\u4e3a\u5c0f\u5199" = 146
	int LITERAL_ltrim = 147;
	// "\u53bb\u6389\u5de6\u7a7a\u683c" = 148
	int LITERAL_patindex = 149;
	// "\u6c42\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e" = 150
	int LITERAL_replace = 151;
	// "\u5b57\u7b26\u4e32\u66ff\u6362" = 152
	int LITERAL_right = 153;
	int LITERAL_rtrim = 154;
	// "\u53bb\u6389\u53f3\u7a7a\u683c" = 155
	int LITERAL_str = 156;
	// "\u6570\u503c\u8f6c\u5b57\u7b26\u4e32" = 157
	int LITERAL_substring = 158;
	// "\u5b57\u7b26\u4e32\u622a\u53d6" = 159
	int LITERAL_upper = 160;
	// "\u5c06\u5b57\u7b26\u4e32\u8f6c\u4e3a\u5927\u5199" = 161
	int LITERAL_dateformat = 162;
	// "\u683c\u5f0f\u5316\u65e5\u671f" = 163
	int LITERAL_datename = 164;
	// "\u6c42\u65e5\u671f\u7684\u5206\u91cf\u503c" = 165
	int LITERAL_datepart = 166;
	// "\u6c42\u65e5\u671f\u7684\u5206\u91cf\u6574\u6570\u503c" = 167
	int LITERAL_datetime = 168;
	// "\u8f6c\u4e3a\u65e5\u671f\u65f6\u95f4" = 169
	int LITERAL_date = 170;
	int LITERAL_dayname = 171;
	int LITERAL_days = 172;
	int LITERAL_day = 173;
	int LITERAL_dow = 174;
	int LITERAL_hours = 175;
	int LITERAL_hour = 176;
	int LITERAL_minutes = 177;
	int LITERAL_minute = 178;
	int LITERAL_monthname = 179;
	int LITERAL_months = 180;
	int LITERAL_month = 181;
	int LITERAL_now = 182;
	// "\u53d6\u5f53\u524d\u65e5\u671f\u65f6\u95f4" = 183
	int LITERAL_quarter = 184;
	int LITERAL_seconds = 185;
	int LITERAL_second = 186;
	int LITERAL_today = 187;
	// "\u53d6\u5f53\u524d\u65e5\u671f" = 188
	int LITERAL_weeks = 189;
	int LITERAL_week = 190;
	int LITERAL_years = 191;
	int LITERAL_year = 192;
	int LITERAL_getdate = 193;
	// "\u6c42\u5f53\u524d\u65e5\u671f\u65f6\u95f4" = 194
	int LITERAL_dateadd = 195;
	// "\u65e5\u671f\u76f8\u52a0" = 196
	int LITERAL_datediff = 197;
	// "\u65e5\u671f\u76f8\u51cf" = 198
	int LITERAL_convert = 199;
	// "\u5b57\u7b26\u8f6c\u4e3a\u65e5\u671f" = 200
	int LITERAL_hextoint = 201;
	// "\u5341\u516d\u8fdb\u5236\u8f6c\u4e3a\u6574\u6570" = 202
	int LITERAL_inttohex = 203;
	// "\u6574\u6570\u8f6c\u4e3a\u5341\u516d\u8fdb\u5236" = 204
	int LITERAL_isdate = 205;
	// "\u662f\u65e5\u671f\u578b" = 206
	int LITERAL_isnumeric = 207;
	// "\u662f\u6570\u503c\u578b" = 208
	int LITERAL_suser_id = 209;
	int LITERAL_suser_name = 210;
	int LITERAL_user_id = 211;
	int LITERAL_user_name = 212;
	int LITERAL_decode = 213;
	int LITERAL_dump = 214;
	int LITERAL_greatest = 215;
	int LITERAL_least = 216;
	int LITERAL_nvl = 217;
	int LITERAL_vsize = 218;
	int ONE_ARG_OP = 219;
	int TWO_ARG_OP = 220;
	int MINUS = 221;
	// "\u4e0e" = 222
	// "\u6216" = 223
	// "\u5f02\u6216" = 224
	// "\u52a0" = 225
	// "\u51cf" = 226
	// "\u4e58" = 227
	// "\u9664" = 228
	int COMPARE_OP = 229;
	int LITERAL_like = 230;
	// "\u5927\u4e8e\u7b49\u4e8e" = 231
	// "\u5c0f\u4e8e\u7b49\u4e8e" = 232
	// "\u5927\u4e8e" = 233
	// "\u5c0f\u4e8e" = 234
	// "\u4e0d\u7b49\u4e8e" = 235
	// "\u5305\u542b" = 236
	// "\u4e0d\u5305\u542b" = 237
	// "not exists" = 238
	// "\u4e0d\u5b58\u5728" = 239
	int LITERAL_exists = 240;
	// "\u5b58\u5728" = 241
	int NOT_EXIST = 242;
	int EXIST = 243;
	int PARAM_LPAREN = 244;
	int PARAM_RPAREN = 245;
	int WS = 246;
	int ESC = 247;
	int ID_START_LETTER = 248;
	int ID_LETTER = 249;
	int NUM = 250;
	int DOT_NUM = 251;
	int NUM_START = 252;
	int NUM_LETTER = 253;
	int ML_COMMENT = 254;
}
