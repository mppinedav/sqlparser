// $ANTLR 2.7.7 (2006-11-01): "src/parser/oracle/parser_oracle.g" -> "Oracle9iLexer.java"$

	package parser.oracle;

public interface Oracle9iParserTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int SELECT_STATEMENT = 4;
	int SEARCH_NOT_CONDITION = 5;
	int SUBQUERY = 6;
	int GROUP_BY = 7;
	int ORDER_BY = 8;
	int ALIAS_EQU = 9;
	int FUNCTION = 10;
	int FUNCTION_EMPTY_PARAM = 11;
	int FUNCTION_STAR_PARAM = 12;
	int FUNCTION_STAR_COUNT = 13;
	int FUNCTION_DATA_TYPE = 14;
	int FUNCTION_AS_DATA_TYPE = 15;
	int LOGIC_OP = 16;
	int LOGICAL_NULL = 17;
	int LOGICAL_NOT_NULL = 18;
	int LOGICAL_IN = 19;
	int LOGICAL_NOT_IN = 20;
	int LOGICAL_LIKE = 21;
	int LOGICAL_NOT_LIKE = 22;
	int LOGICAL_EXISTS = 23;
	int LOGICAL_NOT_EXISTS = 24;
	int LOGICAL_BETWEEN = 25;
	int SUBCONTAIN_OP = 26;
	int ALL_FIELDS = 27;
	int PAREN_FIELD = 28;
	int PAREN_DATA_TYPE = 29;
	int PAREN_CHAR_DATA_TYPE = 30;
	int LOGIC_BLOCK = 31;
	int COLUMN = 32;
	int WHERE = 33;
	int SEMI = 34;
	int TABLE_UNION_EN = 35;
	int TABLE_UNION_CN = 36;
	int COMMA = 37;
	int TABLE_COMPARE_EN = 38;
	int TABLE_COMPARE_CN = 39;
	int WHERE_EN = 40;
	int WHERE_CN = 41;
	int EXISTS_EN = 42;
	int EXISTS_CN = 43;
	int NOT_EXISTS_CN = 44;
	int NOT_EN = 45;
	int SELECT_EN = 46;
	int SELECT_CN = 47;
	int DISTINCT_EN = 48;
	int DISTINCT_CN = 49;
	int FROM_EN = 50;
	int FROM_CN = 51;
	int GROUP_EN = 52;
	int BY_EN = 53;
	int GROUP_BY_CN = 54;
	int ORDER_EN = 55;
	int ORDER_BY_CN = 56;
	int NOT_CN = 57;
	int AND_EN = 58;
	int OR_EN = 59;
	int AND_CN = 60;
	int OR_CN = 61;
	int LPAREN = 62;
	int RPAREN = 63;
	int AS_EN = 64;
	int AS_CN = 65;
	// "=" = 66
	// "\u7b49\u4e8e" = 67
	int SELECT_ALL_CN = 68;
	int STAR = 69;
	int ASC_EN = 70;
	int ASC_CN = 71;
	int DESC_EN = 72;
	int DESC_CN = 73;
	int LIKE_EN = 74;
	int LIKE_CN = 75;
	int NOT_LIKE_CN = 76;
	int IS_EN = 77;
	int NULL_EN = 78;
	int NULL_CN = 79;
	int NOT_NULL_CN = 80;
	int BETWEEN_CN = 81;
	int BETWEEN_EN = 82;
	int IN_EN = 83;
	int IN_CN = 84;
	int NOT_IN_CN = 85;
	int COUNT_EN = 86;
	int COUNT_CN = 87;
	int ALL_EN = 88;
	int ALL_CN = 89;
	int DATA_TYPE_AS_CN = 90;
	int CHAR = 91;
	int DATA_TYPE_STRING = 92;
	int REAL_NUM = 93;
	int ID = 94;
	int PARAM_ID = 95;
	int QUOTED_STRING = 96;
	int POINT = 97;
	int NEGATIVE_DIGIT_ELEMENT = 98;
	int LITERAL_avg = 99;
	// "\u6c42\u5e73\u5747\u6570" = 100
	int LITERAL_max = 101;
	// "\u6c42\u6700\u5927\u503c" = 102
	int LITERAL_min = 103;
	// "\u6c42\u6700\u5c0f\u503c" = 104
	int LITERAL_stddev = 105;
	// "\u6c42\u65b9\u5dee" = 106
	int LITERAL_sum = 107;
	// "\u6c42\u603b\u548c" = 108
	int LITERAL_variance = 109;
	// "\u6c42\u7edf\u8ba1\u65b9\u5dee" = 110
	int LITERAL_getdate = 111;
	// "\u53d6\u5f53\u524d\u65e5\u671f\u65f6\u95f42" = 112
	int LITERAL_rand = 113;
	// "\u53d6\u968f\u673a\u6570" = 114
	int LITERAL_pi = 115;
	// "\u6c42\u5706\u5468\u7387" = 116
	int LITERAL_now = 117;
	// "\u53d6\u5f53\u524d\u65e5\u671f\u65f6\u95f41" = 118
	int LITERAL_today = 119;
	// "\u6c42\u5f53\u524d\u65e5\u671f" = 120
	int LITERAL_convert = 121;
	// "\u6570\u636e\u7c7b\u578b\u8f6c\u6362" = 122
	int LITERAL_cast = 123;
	// "\u6570\u636e\u7c7b\u578b\u8f6c\u5316" = 124
	int LITERAL_abs = 125;
	// "\u53d6\u7edd\u5bf9\u503c" = 126
	int LITERAL_acos = 127;
	// "\u6c42\u53cd\u4f59\u5f26\u503c" = 128
	int LITERAL_asin = 129;
	// "\u6c42\u53cd\u6b63\u5f26\u503c" = 130
	int LITERAL_atan = 131;
	// "\u6c42\u53cd\u6b63\u5207\u503c" = 132
	// "atin2" = 133
	// "\u6c42\u4e8c\u4e2a\u6570\u7684\u53cd\u6b63\u5207\u503c" = 134
	int LITERAL_ceil = 135;
	// "\u53d6\u4e0a\u9650\u6574\u6570" = 136
	int LITERAL_cos = 137;
	// "\u6c42\u4f59\u5f26\u503c" = 138
	int LITERAL_cot = 139;
	// "\u6c42\u4f59\u5207\u503c" = 140
	int LITERAL_degrees = 141;
	// "\u5f27\u5ea6\u8f6c\u5ea6\u6570" = 142
	int LITERAL_exp = 143;
	// "\u6c42\u5e42\u503c" = 144
	int LITERAL_floor = 145;
	// "\u53d6\u4e0b\u9650\u6574\u6570" = 146
	int LITERAL_log = 147;
	// "\u6c42\u81ea\u7136\u5bf9\u6570" = 148
	// "log10" = 149
	// "\u6c4210\u4e3a\u5e95\u7684\u5bf9\u6570" = 150
	int LITERAL_mod = 151;
	// "\u6c42\u6a21" = 152
	int LITERAL_power = 153;
	// "\u6c42\u5e42" = 154
	int LITERAL_radians = 155;
	// "\u5ea6\u6570\u8f6c\u5f27\u5ea6" = 156
	int LITERAL_remainder = 157;
	// "\u6c42\u6a212" = 158
	int LITERAL_round = 159;
	// "\u683c\u5f0f\u5316\u6570\u503c" = 160
	int LITERAL_sign = 161;
	// "\u6c42\u503c\u7684\u7b26\u53f7" = 162
	int LITERAL_sin = 163;
	// "\u6c42\u6b63\u5f26\u503c" = 164
	int LITERAL_sqrt = 165;
	// "\u6c42\u5e73\u65b9\u6839" = 166
	int LITERAL_tan = 167;
	// "\u6c42\u6b63\u5207\u503c" = 168
	// "\u683c\u5f0f\u5316\u6570\u503c3" = 169
	int LITERAL_truncnum = 170;
	// "\u683c\u5f0f\u5316\u6570\u503c2" = 171
	int LITERAL_ascii = 172;
	// "\u6c42ASCII\u7801" = 173
	int LITERAL_asciistr = 174;
	// "\u6c42\u5b57\u7b26\u4e32ASCII\u7801" = 175
	int LITERAL_chartorowid = 176;
	// "\u5b57\u7b26\u4e32\u8f6c\u6210ROWID" = 177
	int LITERAL_chr = 178;
	// "\u6c42\u7b49\u503c\u7684\u5b57\u7b26" = 179
	int LITERAL_char_length = 180;
	// "\u6c42\u5b57\u7b26\u4e32\u957f\u5ea61" = 181
	int LITERAL_charindex = 182;
	// "\u5b58\u5728\u4e8e" = 183
	int LITERAL_difference = 184;
	// "\u6c42\u4e24\u4e2a\u4e32\u7684\u58f0\u97f3\u5dee\u503c" = 185
	int LITERAL_insertstr = 186;
	// "\u63d2\u5165\u5b57\u7b26\u4e32" = 187
	int LITERAL_lcase = 188;
	// "\u8f6c\u4e3a\u5c0f\u5199\u5b57\u6bcd1" = 189
	int LITERAL_left = 190;
	// "\u5de6\u622a\u5b57\u7b26\u4e32" = 191
	int LITERAL_length = 192;
	// "\u6c42\u5b57\u7b26\u4e32\u957f\u5ea62" = 193
	int LITERAL_locate = 194;
	// "\u6c42\u4e32\u4f4d\u7f6e1" = 195
	int LITERAL_lower = 196;
	// "\u8f6c\u4e3a\u5c0f\u5199\u5b57\u6bcd2" = 197
	int LITERAL_ltrim = 198;
	// "\u53bb\u6389\u5de6\u7a7a\u683c" = 199
	int LITERAL_octet_length = 200;
	// "\u6c42\u5b57\u7b26\u4e32\u7684\u5b58\u50a8\u957f\u5ea6" = 201
	int LITERAL_patindex = 202;
	// "\u6c42\u4e32\u4f4d\u7f6e2" = 203
	int LITERAL_repeat = 204;
	// "\u5b57\u7b26\u4e32\u5faa\u73af\u8fde\u63a51" = 205
	int LITERAL_replace = 206;
	// "\u66ff\u6362\u5b57\u7b26\u4e32" = 207
	int LITERAL_replicate = 208;
	// "\u5b57\u7b26\u4e32\u5faa\u73af\u8fde\u63a52" = 209
	int LITERAL_right = 210;
	// "\u53f3\u622a\u5b57\u7b26\u4e32" = 211
	int LITERAL_rtrim = 212;
	// "\u53bb\u6389\u53f3\u7a7a\u683c" = 213
	int LITERAL_similar = 214;
	// "\u6c42\u5b57\u7b26\u4e32\u76f8\u4f3c\u5ea6" = 215
	int LITERAL_sortkey = 216;
	// "\u5b57\u7b26\u4e32\u6392\u5e8f" = 217
	int LITERAL_soundex = 218;
	// "\u6c42\u5b57\u7b26\u4e32\u58f0\u97f3\u503c" = 219
	int LITERAL_space = 220;
	// "\u586b\u7a7a\u683c" = 221
	int LITERAL_str = 222;
	// "\u6570\u503c\u8f6c\u5b57\u7b26\u4e32" = 223
	int LITERAL_string = 224;
	// "\u5b57\u7b26\u4e32\u5408\u5e76" = 225
	int LITERAL_stuff = 226;
	// "\u5b57\u7b26\u4e32\u5220\u9664\u66ff\u6362" = 227
	int LITERAL_substring = 228;
	// "\u5b57\u7b26\u4e32\u622a\u53d6" = 229
	int LITERAL_trim = 230;
	// "\u53bb\u5de6\u53f3\u7a7a\u683c" = 231
	int LITERAL_ucase = 232;
	// "\u8f6c\u4e3a\u5927\u5199\u5b57\u6bcd1" = 233
	int LITERAL_upper = 234;
	// "\u8f6c\u4e3a\u5927\u5199\u5b57\u6bcd2" = 235
	int LITERAL_add_months = 236;
	// "\u6708\u4efd\u8fd0\u7b97" = 237
	int LITERAL_dateformat = 238;
	// "\u683c\u5f0f\u5316\u65e5\u671f" = 239
	int LITERAL_datename = 240;
	// "\u6c42\u65e5\u671f\u5206\u91cf\u82f1\u6587\u540d" = 241
	int LITERAL_datepart = 242;
	// "\u6c42\u65e5\u671f\u7684\u5206\u91cf\u503c" = 243
	int LITERAL_datetime = 244;
	// "\u8f6c\u4e3a\u65e5\u671f\u65f6\u95f4" = 245
	int LITERAL_date = 246;
	// "\u8f6c\u4e3a\u65e5\u671f" = 247
	int LITERAL_dayname = 248;
	// "\u6c42\u661f\u671f\u82f1\u6587\u540d" = 249
	int LITERAL_days = 250;
	// "\u6c42\u5929\u6570" = 251
	int LITERAL_day = 252;
	// "\u6c42\u5177\u4f53\u65e5\u671f" = 253
	int LITERAL_dow = 254;
	// "\u6c42\u5177\u4f53\u661f\u671f" = 255
	int LITERAL_hours = 256;
	// "\u6c42\u5c0f\u65f6\u6570" = 257
	int LITERAL_hour = 258;
	// "\u6c42\u5177\u4f53\u5c0f\u65f6" = 259
	int LITERAL_minutes = 260;
	// "\u6c42\u5206\u949f\u6570" = 261
	int LITERAL_minute = 262;
	// "\u6c42\u5177\u4f53\u5206\u949f" = 263
	int LITERAL_monthname = 264;
	// "\u6c42\u6708\u4efd\u82f1\u6587\u540d" = 265
	int LITERAL_months = 266;
	// "\u6c42\u6708\u6570" = 267
	int LITERAL_month = 268;
	// "\u6c42\u5177\u4f53\u6708\u6570" = 269
	int LITERAL_quarter = 270;
	// "\u6c42\u5177\u4f53\u5b63\u5ea6" = 271
	int LITERAL_seconds = 272;
	// "\u6c42\u79d2\u6570" = 273
	int LITERAL_second = 274;
	// "\u6c42\u5177\u4f53\u79d2" = 275
	int LITERAL_weeks = 276;
	// "\u6c42\u5468\u6570" = 277
	int LITERAL_years = 278;
	// "\u6c42\u5e74\u6570" = 279
	int LITERAL_year = 280;
	// "\u6c42\u5177\u4f53\u5e74\u4efd" = 281
	int LITERAL_ymd = 282;
	// "\u6570\u503c\u8f6c\u65e5\u671f" = 283
	int LITERAL_dateadd = 284;
	// "\u65e5\u671f\u8fd0\u7b97" = 285
	int LITERAL_datediff = 286;
	// "\u6c42\u4e24\u65e5\u671f\u5dee\u503c" = 287
	int LITERAL_bin_to_num = 288;
	// "\u4e8c\u8fdb\u5236\u8f6c\u4e3a\u6570\u503c" = 289
	int LITERAL_hextoint = 290;
	// "\u5341\u516d\u8fdb\u5236\u8f6c\u4e3a\u6574\u6570" = 291
	int LITERAL_inttohex = 292;
	// "\u6574\u6570\u8f6c\u4e3a\u5341\u516d\u8fdb\u5236" = 293
	int LITERAL_isdate = 294;
	// "\u662f\u5426\u65e5\u671f\u578b" = 295
	int LITERAL_isnumeric = 296;
	// "\u662f\u5426\u6570\u503c\u578b" = 297
	int LITERAL_suser_id = 298;
	int LITERAL_suser_name = 299;
	int LITERAL_user_id = 300;
	int LITERAL_user_name = 301;
	int LITERAL_bitand = 302;
	// "\u4e0e\u8fd0\u7b97" = 303
	int LITERAL_argn = 304;
	int LITERAL_rowid = 305;
	int TILDE = 306;
	// "\u975e\u8fd0\u7b97" = 307
	// "\u4e0e" = 308
	// "\u6216" = 309
	// "\u5f02\u6216" = 310
	// "\u52a0" = 311
	// "\u51cf" = 312
	// "\u4e58" = 313
	// "\u9664" = 314
	int PLUS = 315;
	int MINUS = 316;
	int DIVIDE = 317;
	int MOD = 318;
	int AMPERSAND = 319;
	int BITWISEOR = 320;
	int BITWISEXOR = 321;
	int ASSIGNEQUAL = 322;
	// "\u5927\u4e8e\u7b49\u4e8e" = 323
	// "\u5c0f\u4e8e\u7b49\u4e8e" = 324
	// "\u5927\u4e8e" = 325
	// "\u5c0f\u4e8e" = 326
	// "\u4e0d\u7b49\u4e8e" = 327
	// "\u5de6\u8fde\u63a5" = 328
	int LEFT_JOIN = 329;
	int NOTEQUAL1 = 330;
	int NOTEQUAL2 = 331;
	int LESSTHANOREQUALTO1 = 332;
	int LESSTHANOREQUALTO2 = 333;
	int LESSTHAN = 334;
	int GREATERTHANOREQUALTO1 = 335;
	int GREATERTHANOREQUALTO2 = 336;
	int GREATERTHAN = 337;
	int LITERAL_yy = 338;
	int LITERAL_mm = 339;
	int LITERAL_dd = 340;
	int LITERAL_qq = 341;
	int LITERAL_week = 342;
	int LITERAL_wk = 343;
	int LITERAL_dayofyear = 344;
	int LITERAL_dy = 345;
	int LITERAL_weekday = 346;
	int LITERAL_dw = 347;
	int LITERAL_hh = 348;
	int LITERAL_mi = 349;
	int LITERAL_ss = 350;
	int LITERAL_millisecond = 351;
	int LITERAL_ms = 352;
	int LITERAL_calweekofyear = 353;
	int LITERAL_cwk = 354;
	int LITERAL_calyearofweek = 355;
	int LITERAL_cyr = 356;
	int LITERAL_caldayofweek = 357;
	int LITERAL_cdw = 358;
	int LITERAL_uniqueidentifierstr = 359;
	int LITERAL_bigint = 360;
	int LITERAL_int = 361;
	int LITERAL_integer = 362;
	int LITERAL_smallint = 363;
	int LITERAL_tinyint = 364;
	int LITERAL_double = 365;
	int LITERAL_real = 366;
	int LITERAL_smalldatetime = 367;
	int LITERAL_time = 368;
	int LITERAL_timestamp = 369;
	int LITERAL_bit = 370;
	int DOT_STAR = 371;
	int PARAM_LPAREN = 372;
	int PARAM_RPAREN = 373;
	int FROM = 374;
	int WS = 375;
	int ESC = 376;
	int ID_START_LETTER = 377;
	int ID_LETTER = 378;
	int NUM = 379;
	int DOT_NUM = 380;
	int NUM_START = 381;
	int NUM_LETTER = 382;
	int ML_COMMENT = 383;
	int NOT = 384;
	int EXISTS = 385;
	int COMPARE_OP = 386;
	int TWO_ARG_OP = 387;
	int ONE_ARG_OP = 388;
	int LITERAL_ceiling = 389;
	int LITERAL_bit_length = 390;
	// "\u6c42\u5b57\u7b26\u4e32\u7684\u4e8c\u8fdb\u5236\u957f\u5ea6" = 391
	int LITERAL_byte_length = 392;
	// "\u6c42\u5b57\u7b26\u4e32\u7684\u5b57\u8282\u6570" = 393
}
